{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-[25vw] h-auto border-[1px] border-[lightgray] rounded-[20px]\"\n};\nconst _hoisted_2 = {\n  class: \"trending\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-xl font-bold\"\n}, \"Trending for you\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Trending Bar \"), _createElementVNode(\"aside\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.trends, trend => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: trend.id\n    }, [_createElementVNode(\"p\", null, \"Trending in \" + _toDisplayString(trend.location), 1 /* TEXT */), _createElementVNode(\"h3\", null, _toDisplayString(trend.hashtag), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.formatNumber(trend.Tweets_count)) + \" Tweets\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_renderList","$setup","trends","trend","key","id","_toDisplayString","location","hashtag","formatNumber","Tweets_count"],"sources":["/Users/badrnejaa/Desktop/Tweety/src/components/Trending.vue"],"sourcesContent":["<template>\n  <!-- Trending Bar -->\n  <aside class=\"w-[25vw] h-auto border-[1px] border-[lightgray] rounded-[20px]\">\n    <ul class=\"trending\">\n      <li>\n        <h1 class=\"text-xl font-bold\">Trending for you</h1>\n      </li>\n      <li v-for=\"trend in trends\" :key=\"trend.id\">\n        <p>Trending in {{ trend.location }}</p>\n        <h3>{{ trend.hashtag }}</h3>\n        <p>{{ formatNumber(trend.Tweets_count) }} Tweets</p>\n      </li>\n    </ul>\n  </aside>\n</template>\n\n<style>\n.trending li {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: rgb(224, 131, 10);\n  padding: 12px 30px;\n  border-bottom: 1px solid lightgray;\n}\n\n.trending li:last-child {\n  border-bottom: none;\n}\n\n.trending li p {\n  color: gray;\n  font-size: 13px;\n}\n</style>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"TrendingBar\",\n  setup() {\n    const trends = ref([]);\n\n    async function fetchTrends() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/Trends\");\n        trends.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching trends:\", error);\n      }\n    }\n\n    function formatNumber(number) {\n      if (number >= 1000000000) {\n        return (number / 1000000000).toFixed(1) + \"B\";\n      } else if (number >= 1000000) {\n        return (number / 1000000).toFixed(1) + \"M\";\n      } else if (number >= 1000) {\n        return (number / 1000).toFixed(1) + \"K\";\n      }\n      return number;\n    }\n\n    onMounted(fetchTrends);\n\n    return {\n      trends,\n      formatNumber,\n    };\n  },\n};\n</script>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAgE;;EACvEA,KAAK,EAAC;AAAU;gCAClBC,mBAAA,CAEK,a,aADHA,mBAAA,CAAmD;EAA/CD,KAAK,EAAC;AAAmB,GAAC,kBAAgB,E;;uBALtDE,mBAAA,CAAAC,SAAA,SACEC,mBAAA,kBAAqB,EACrBH,mBAAA,CAWQ,SAXRI,UAWQ,GAVNJ,mBAAA,CASK,MATLK,UASK,GARHC,UAEK,G,kBACLL,mBAAA,CAIKC,SAAA,QAXXK,WAAA,CAO0BC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBT,mBAAA,CAIK;MAJwBU,GAAG,EAAED,KAAK,CAACE;QACtCZ,mBAAA,CAAuC,WAApC,cAAY,GAAAa,gBAAA,CAAGH,KAAK,CAACI,QAAQ,kBAChCd,mBAAA,CAA4B,YAAAa,gBAAA,CAArBH,KAAK,CAACK,OAAO,kBACpBf,mBAAA,CAAoD,WAAAa,gBAAA,CAA9CL,MAAA,CAAAQ,YAAY,CAACN,KAAK,CAACO,YAAY,KAAI,SAAO,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}