{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"TrendingBar\",\n  setup() {\n    const trends = ref([]);\n    async function fetchTrends() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/Trends\");\n        trends.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching trends:\", error);\n      }\n    }\n    function formatNumber(number) {\n      if (number >= 1000000000) {\n        return (number / 1000000000).toFixed(1) + \"B\";\n      } else if (number >= 1000000) {\n        return (number / 1000000).toFixed(1) + \"M\";\n      } else if (number >= 1000) {\n        return (number / 1000).toFixed(1) + \"K\";\n      }\n      return number;\n    }\n    onMounted(fetchTrends);\n    return {\n      trends,\n      formatNumber\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","setup","trends","fetchTrends","response","get","value","data","error","console","formatNumber","number","toFixed"],"sources":["/Users/badrnejaa/Desktop/Tweety/src/components/Trending.vue"],"sourcesContent":["<template>\n  <!-- Trending Bar -->\n  <aside class=\"w-[25vw] h-auto border-[1px] border-[lightgray] rounded-[20px]\">\n    <ul class=\"trending\">\n      <li>\n        <h1 class=\"text-xl font-bold\">Trending for you</h1>\n      </li>\n      <li v-for=\"trend in trends\" :key=\"trend.id\">\n        <p>Trending in {{ trend.location }}</p>\n        <h3>{{ trend.hashtag }}</h3>\n        <p>{{ formatNumber(trend.Tweets_count) }} Tweets</p>\n      </li>\n    </ul>\n  </aside>\n</template>\n\n<style>\n.trending li {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: antiquewhite;\n  padding: 12px 30px;\n  border-bottom: 1px solid lightgray;\n}\n\n.trending li:last-child {\n  border-bottom: none;\n}\n\n.trending li p {\n  color: gray;\n  font-size: 13px;\n}\n</style>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"TrendingBar\",\n  setup() {\n    const trends = ref([]);\n\n    async function fetchTrends() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/Trends\");\n        trends.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching trends:\", error);\n      }\n    }\n\n    function formatNumber(number) {\n      if (number >= 1000000000) {\n        return (number / 1000000000).toFixed(1) + \"B\";\n      } else if (number >= 1000000) {\n        return (number / 1000000).toFixed(1) + \"M\";\n      } else if (number >= 1000) {\n        return (number / 1000).toFixed(1) + \"K\";\n      }\n      return number;\n    }\n\n    onMounted(fetchTrends);\n\n    return {\n      trends,\n      formatNumber,\n    };\n  },\n};\n</script>\n"],"mappings":"AAqCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,GAAG,CAAC,EAAE,CAAC;IAEtB,eAAeM,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,GAAG,CAAC,8BAA8B,CAAC;QAChEH,MAAM,CAACI,KAAI,GAAIF,QAAQ,CAACG,IAAI;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;IAEA,SAASE,YAAYA,CAACC,MAAM,EAAE;MAC5B,IAAIA,MAAK,IAAK,UAAU,EAAE;QACxB,OAAO,CAACA,MAAK,GAAI,UAAU,EAAEC,OAAO,CAAC,CAAC,IAAI,GAAG;MAC/C,OAAO,IAAID,MAAK,IAAK,OAAO,EAAE;QAC5B,OAAO,CAACA,MAAK,GAAI,OAAO,EAAEC,OAAO,CAAC,CAAC,IAAI,GAAG;MAC5C,OAAO,IAAID,MAAK,IAAK,IAAI,EAAE;QACzB,OAAO,CAACA,MAAK,GAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,IAAI,GAAG;MACzC;MACA,OAAOD,MAAM;IACf;IAEAb,SAAS,CAACK,WAAW,CAAC;IAEtB,OAAO;MACLD,MAAM;MACNQ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}